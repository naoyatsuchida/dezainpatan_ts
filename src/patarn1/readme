iteratorパターン
■イテレーターの役
　プログラムではIteratorインターフェイスがその役目、
　次の要素があるかをチェックするhasNext
　要素の取得と次のインデックスに繰上げする

■コンクリートイテレーターの役
BookShelfIteratorがその役目
イテレーターを実際に実装する役目


■アグリゲートの役
Iteratorを作り出すインターフェイス

■コンクリートアグリゲートの役



まとめ
イテレーターパターンは四つの役割がある。

イテレーター (interface) 具体的に配列を扱うために操作用のメソッドを定義するinterface
            次の要素があるかどうかチェックするメソッドや、次の要素を取得するなどのメソッドを定義する
            本棚操作用クラスに実装する

アグリゲート(interface) イテレーターをインスタンスかするためのメソッドを持っておく
            本棚操作用クラスに実装する

コンクリートイテレーター (class) イテレーターで定義されたメソッドを実装する必要がある。コンストラクターに対象の本棚クラスをインスタンスかしてフィールドに保持する。
            保持している本棚クラスに対してあれやこれやとメソッドを駆使して走査をしたりする

コンクリートアグリゲート(class) 最も小さい対象クラス(本クラス)の配列をフィールドに保持して。その配列の中に小クラスを追加。その後iteratorメソッドを実行して
            コンクリートイテレーターインスタンスを生成する
